// <auto-generated />
using System;
using CupcakeShop.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CupcakeShop.Web.Migrations
{
    [DbContext(typeof(CupcakeShopDbContext))]
    [Migration("20210328203734_CupcakeCart_Stocks_Migration")]
    partial class CupcakeCart_Stocks_Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CupcakeShop.Web.Entities.Candy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CandyFlavour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CupcakeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shape")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sugar")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CupcakeId");

                    b.ToTable("Candies");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Block")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Suit")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Cupcake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Dough")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Flavour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gluten")
                        .HasColumnType("int");

                    b.Property<int>("Icing")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Producer")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cupcakes");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.CupcakeCandy", b =>
                {
                    b.Property<int>("CupcakeId")
                        .HasColumnType("int");

                    b.Property<int>("CandyId")
                        .HasColumnType("int");

                    b.HasKey("CupcakeId", "CandyId");

                    b.HasIndex("CandyId");

                    b.ToTable("CupcakeCandies");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.CupcakeCart", b =>
                {
                    b.Property<int>("CupcakeId")
                        .HasColumnType("int");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CupcakeId", "CartId");

                    b.HasIndex("CartId");

                    b.ToTable("CupcakeCarts");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HoursPerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupation")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Seniority")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Emergency")
                        .HasColumnType("bit");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("StatusOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ShopId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.OrderCupcake", b =>
                {
                    b.Property<int>("CupcakeId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CupcakeId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderCupcakes");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Block")
                        .HasColumnType("int");

                    b.Property<int>("Capital")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Suit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Candy", b =>
                {
                    b.HasOne("CupcakeShop.Web.Entities.Cupcake", null)
                        .WithMany("Candies")
                        .HasForeignKey("CupcakeId");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Cart", b =>
                {
                    b.HasOne("CupcakeShop.Web.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.CupcakeCandy", b =>
                {
                    b.HasOne("CupcakeShop.Web.Entities.Candy", "Candy")
                        .WithMany("CupcakeCandies")
                        .HasForeignKey("CandyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CupcakeShop.Web.Entities.Cupcake", "Cupcake")
                        .WithMany("CupcakeCandies")
                        .HasForeignKey("CupcakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candy");

                    b.Navigation("Cupcake");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.CupcakeCart", b =>
                {
                    b.HasOne("CupcakeShop.Web.Entities.Cart", "Cart")
                        .WithMany("CupcakeCarts")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CupcakeShop.Web.Entities.Cupcake", "Cupcake")
                        .WithMany("CupcakeCarts")
                        .HasForeignKey("CupcakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Cupcake");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Employee", b =>
                {
                    b.HasOne("CupcakeShop.Web.Entities.Shop", "Shop")
                        .WithMany("Employes")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Order", b =>
                {
                    b.HasOne("CupcakeShop.Web.Entities.Client", "Client")
                        .WithMany("Order")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CupcakeShop.Web.Entities.Shop", "Shop")
                        .WithMany("Orders")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.OrderCupcake", b =>
                {
                    b.HasOne("CupcakeShop.Web.Entities.Cupcake", "Cupcake")
                        .WithMany("OrderCupcakes")
                        .HasForeignKey("CupcakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CupcakeShop.Web.Entities.Order", "Order")
                        .WithMany("OrderCupcakes")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cupcake");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Candy", b =>
                {
                    b.Navigation("CupcakeCandies");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Cart", b =>
                {
                    b.Navigation("CupcakeCarts");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Client", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Cupcake", b =>
                {
                    b.Navigation("Candies");

                    b.Navigation("CupcakeCandies");

                    b.Navigation("CupcakeCarts");

                    b.Navigation("OrderCupcakes");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Order", b =>
                {
                    b.Navigation("OrderCupcakes");
                });

            modelBuilder.Entity("CupcakeShop.Web.Entities.Shop", b =>
                {
                    b.Navigation("Employes");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
